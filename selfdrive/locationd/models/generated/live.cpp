#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3184951436562767646) {
   out_3184951436562767646[0] = 0;
   out_3184951436562767646[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3184951436562767646[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3184951436562767646[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3184951436562767646[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3184951436562767646[5] = -sin(in_vec[1]);
   out_3184951436562767646[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3184951436562767646[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3184951436562767646[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3184951436562767646[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3184951436562767646[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3184951436562767646[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3184951436562767646[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3184951436562767646[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3184951436562767646[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3184951436562767646[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3184951436562767646[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3184951436562767646[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7323533020603109004) {
   out_7323533020603109004[0] = delta_x[0] + nom_x[0];
   out_7323533020603109004[1] = delta_x[1] + nom_x[1];
   out_7323533020603109004[2] = delta_x[2] + nom_x[2];
   out_7323533020603109004[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7323533020603109004[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7323533020603109004[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7323533020603109004[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7323533020603109004[7] = delta_x[6] + nom_x[7];
   out_7323533020603109004[8] = delta_x[7] + nom_x[8];
   out_7323533020603109004[9] = delta_x[8] + nom_x[9];
   out_7323533020603109004[10] = delta_x[9] + nom_x[10];
   out_7323533020603109004[11] = delta_x[10] + nom_x[11];
   out_7323533020603109004[12] = delta_x[11] + nom_x[12];
   out_7323533020603109004[13] = delta_x[12] + nom_x[13];
   out_7323533020603109004[14] = delta_x[13] + nom_x[14];
   out_7323533020603109004[15] = delta_x[14] + nom_x[15];
   out_7323533020603109004[16] = delta_x[15] + nom_x[16];
   out_7323533020603109004[17] = delta_x[16] + nom_x[17];
   out_7323533020603109004[18] = delta_x[17] + nom_x[18];
   out_7323533020603109004[19] = delta_x[18] + nom_x[19];
   out_7323533020603109004[20] = delta_x[19] + nom_x[20];
   out_7323533020603109004[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_602826505350458911) {
   out_602826505350458911[0] = -nom_x[0] + true_x[0];
   out_602826505350458911[1] = -nom_x[1] + true_x[1];
   out_602826505350458911[2] = -nom_x[2] + true_x[2];
   out_602826505350458911[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_602826505350458911[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_602826505350458911[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_602826505350458911[6] = -nom_x[7] + true_x[7];
   out_602826505350458911[7] = -nom_x[8] + true_x[8];
   out_602826505350458911[8] = -nom_x[9] + true_x[9];
   out_602826505350458911[9] = -nom_x[10] + true_x[10];
   out_602826505350458911[10] = -nom_x[11] + true_x[11];
   out_602826505350458911[11] = -nom_x[12] + true_x[12];
   out_602826505350458911[12] = -nom_x[13] + true_x[13];
   out_602826505350458911[13] = -nom_x[14] + true_x[14];
   out_602826505350458911[14] = -nom_x[15] + true_x[15];
   out_602826505350458911[15] = -nom_x[16] + true_x[16];
   out_602826505350458911[16] = -nom_x[17] + true_x[17];
   out_602826505350458911[17] = -nom_x[18] + true_x[18];
   out_602826505350458911[18] = -nom_x[19] + true_x[19];
   out_602826505350458911[19] = -nom_x[20] + true_x[20];
   out_602826505350458911[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7234055416017641464) {
   out_7234055416017641464[0] = 1.0;
   out_7234055416017641464[1] = 0;
   out_7234055416017641464[2] = 0;
   out_7234055416017641464[3] = 0;
   out_7234055416017641464[4] = 0;
   out_7234055416017641464[5] = 0;
   out_7234055416017641464[6] = 0;
   out_7234055416017641464[7] = 0;
   out_7234055416017641464[8] = 0;
   out_7234055416017641464[9] = 0;
   out_7234055416017641464[10] = 0;
   out_7234055416017641464[11] = 0;
   out_7234055416017641464[12] = 0;
   out_7234055416017641464[13] = 0;
   out_7234055416017641464[14] = 0;
   out_7234055416017641464[15] = 0;
   out_7234055416017641464[16] = 0;
   out_7234055416017641464[17] = 0;
   out_7234055416017641464[18] = 0;
   out_7234055416017641464[19] = 0;
   out_7234055416017641464[20] = 0;
   out_7234055416017641464[21] = 0;
   out_7234055416017641464[22] = 1.0;
   out_7234055416017641464[23] = 0;
   out_7234055416017641464[24] = 0;
   out_7234055416017641464[25] = 0;
   out_7234055416017641464[26] = 0;
   out_7234055416017641464[27] = 0;
   out_7234055416017641464[28] = 0;
   out_7234055416017641464[29] = 0;
   out_7234055416017641464[30] = 0;
   out_7234055416017641464[31] = 0;
   out_7234055416017641464[32] = 0;
   out_7234055416017641464[33] = 0;
   out_7234055416017641464[34] = 0;
   out_7234055416017641464[35] = 0;
   out_7234055416017641464[36] = 0;
   out_7234055416017641464[37] = 0;
   out_7234055416017641464[38] = 0;
   out_7234055416017641464[39] = 0;
   out_7234055416017641464[40] = 0;
   out_7234055416017641464[41] = 0;
   out_7234055416017641464[42] = 0;
   out_7234055416017641464[43] = 0;
   out_7234055416017641464[44] = 1.0;
   out_7234055416017641464[45] = 0;
   out_7234055416017641464[46] = 0;
   out_7234055416017641464[47] = 0;
   out_7234055416017641464[48] = 0;
   out_7234055416017641464[49] = 0;
   out_7234055416017641464[50] = 0;
   out_7234055416017641464[51] = 0;
   out_7234055416017641464[52] = 0;
   out_7234055416017641464[53] = 0;
   out_7234055416017641464[54] = 0;
   out_7234055416017641464[55] = 0;
   out_7234055416017641464[56] = 0;
   out_7234055416017641464[57] = 0;
   out_7234055416017641464[58] = 0;
   out_7234055416017641464[59] = 0;
   out_7234055416017641464[60] = 0;
   out_7234055416017641464[61] = 0;
   out_7234055416017641464[62] = 0;
   out_7234055416017641464[63] = 0;
   out_7234055416017641464[64] = 0;
   out_7234055416017641464[65] = 0;
   out_7234055416017641464[66] = -0.5*state[4];
   out_7234055416017641464[67] = -0.5*state[5];
   out_7234055416017641464[68] = -0.5*state[6];
   out_7234055416017641464[69] = 0;
   out_7234055416017641464[70] = 0;
   out_7234055416017641464[71] = 0;
   out_7234055416017641464[72] = 0;
   out_7234055416017641464[73] = 0;
   out_7234055416017641464[74] = 0;
   out_7234055416017641464[75] = 0;
   out_7234055416017641464[76] = 0;
   out_7234055416017641464[77] = 0;
   out_7234055416017641464[78] = 0;
   out_7234055416017641464[79] = 0;
   out_7234055416017641464[80] = 0;
   out_7234055416017641464[81] = 0;
   out_7234055416017641464[82] = 0;
   out_7234055416017641464[83] = 0;
   out_7234055416017641464[84] = 0;
   out_7234055416017641464[85] = 0;
   out_7234055416017641464[86] = 0;
   out_7234055416017641464[87] = 0.5*state[3];
   out_7234055416017641464[88] = 0.5*state[6];
   out_7234055416017641464[89] = -0.5*state[5];
   out_7234055416017641464[90] = 0;
   out_7234055416017641464[91] = 0;
   out_7234055416017641464[92] = 0;
   out_7234055416017641464[93] = 0;
   out_7234055416017641464[94] = 0;
   out_7234055416017641464[95] = 0;
   out_7234055416017641464[96] = 0;
   out_7234055416017641464[97] = 0;
   out_7234055416017641464[98] = 0;
   out_7234055416017641464[99] = 0;
   out_7234055416017641464[100] = 0;
   out_7234055416017641464[101] = 0;
   out_7234055416017641464[102] = 0;
   out_7234055416017641464[103] = 0;
   out_7234055416017641464[104] = 0;
   out_7234055416017641464[105] = 0;
   out_7234055416017641464[106] = 0;
   out_7234055416017641464[107] = 0;
   out_7234055416017641464[108] = -0.5*state[6];
   out_7234055416017641464[109] = 0.5*state[3];
   out_7234055416017641464[110] = 0.5*state[4];
   out_7234055416017641464[111] = 0;
   out_7234055416017641464[112] = 0;
   out_7234055416017641464[113] = 0;
   out_7234055416017641464[114] = 0;
   out_7234055416017641464[115] = 0;
   out_7234055416017641464[116] = 0;
   out_7234055416017641464[117] = 0;
   out_7234055416017641464[118] = 0;
   out_7234055416017641464[119] = 0;
   out_7234055416017641464[120] = 0;
   out_7234055416017641464[121] = 0;
   out_7234055416017641464[122] = 0;
   out_7234055416017641464[123] = 0;
   out_7234055416017641464[124] = 0;
   out_7234055416017641464[125] = 0;
   out_7234055416017641464[126] = 0;
   out_7234055416017641464[127] = 0;
   out_7234055416017641464[128] = 0;
   out_7234055416017641464[129] = 0.5*state[5];
   out_7234055416017641464[130] = -0.5*state[4];
   out_7234055416017641464[131] = 0.5*state[3];
   out_7234055416017641464[132] = 0;
   out_7234055416017641464[133] = 0;
   out_7234055416017641464[134] = 0;
   out_7234055416017641464[135] = 0;
   out_7234055416017641464[136] = 0;
   out_7234055416017641464[137] = 0;
   out_7234055416017641464[138] = 0;
   out_7234055416017641464[139] = 0;
   out_7234055416017641464[140] = 0;
   out_7234055416017641464[141] = 0;
   out_7234055416017641464[142] = 0;
   out_7234055416017641464[143] = 0;
   out_7234055416017641464[144] = 0;
   out_7234055416017641464[145] = 0;
   out_7234055416017641464[146] = 0;
   out_7234055416017641464[147] = 0;
   out_7234055416017641464[148] = 0;
   out_7234055416017641464[149] = 0;
   out_7234055416017641464[150] = 0;
   out_7234055416017641464[151] = 0;
   out_7234055416017641464[152] = 0;
   out_7234055416017641464[153] = 1.0;
   out_7234055416017641464[154] = 0;
   out_7234055416017641464[155] = 0;
   out_7234055416017641464[156] = 0;
   out_7234055416017641464[157] = 0;
   out_7234055416017641464[158] = 0;
   out_7234055416017641464[159] = 0;
   out_7234055416017641464[160] = 0;
   out_7234055416017641464[161] = 0;
   out_7234055416017641464[162] = 0;
   out_7234055416017641464[163] = 0;
   out_7234055416017641464[164] = 0;
   out_7234055416017641464[165] = 0;
   out_7234055416017641464[166] = 0;
   out_7234055416017641464[167] = 0;
   out_7234055416017641464[168] = 0;
   out_7234055416017641464[169] = 0;
   out_7234055416017641464[170] = 0;
   out_7234055416017641464[171] = 0;
   out_7234055416017641464[172] = 0;
   out_7234055416017641464[173] = 0;
   out_7234055416017641464[174] = 0;
   out_7234055416017641464[175] = 1.0;
   out_7234055416017641464[176] = 0;
   out_7234055416017641464[177] = 0;
   out_7234055416017641464[178] = 0;
   out_7234055416017641464[179] = 0;
   out_7234055416017641464[180] = 0;
   out_7234055416017641464[181] = 0;
   out_7234055416017641464[182] = 0;
   out_7234055416017641464[183] = 0;
   out_7234055416017641464[184] = 0;
   out_7234055416017641464[185] = 0;
   out_7234055416017641464[186] = 0;
   out_7234055416017641464[187] = 0;
   out_7234055416017641464[188] = 0;
   out_7234055416017641464[189] = 0;
   out_7234055416017641464[190] = 0;
   out_7234055416017641464[191] = 0;
   out_7234055416017641464[192] = 0;
   out_7234055416017641464[193] = 0;
   out_7234055416017641464[194] = 0;
   out_7234055416017641464[195] = 0;
   out_7234055416017641464[196] = 0;
   out_7234055416017641464[197] = 1.0;
   out_7234055416017641464[198] = 0;
   out_7234055416017641464[199] = 0;
   out_7234055416017641464[200] = 0;
   out_7234055416017641464[201] = 0;
   out_7234055416017641464[202] = 0;
   out_7234055416017641464[203] = 0;
   out_7234055416017641464[204] = 0;
   out_7234055416017641464[205] = 0;
   out_7234055416017641464[206] = 0;
   out_7234055416017641464[207] = 0;
   out_7234055416017641464[208] = 0;
   out_7234055416017641464[209] = 0;
   out_7234055416017641464[210] = 0;
   out_7234055416017641464[211] = 0;
   out_7234055416017641464[212] = 0;
   out_7234055416017641464[213] = 0;
   out_7234055416017641464[214] = 0;
   out_7234055416017641464[215] = 0;
   out_7234055416017641464[216] = 0;
   out_7234055416017641464[217] = 0;
   out_7234055416017641464[218] = 0;
   out_7234055416017641464[219] = 1.0;
   out_7234055416017641464[220] = 0;
   out_7234055416017641464[221] = 0;
   out_7234055416017641464[222] = 0;
   out_7234055416017641464[223] = 0;
   out_7234055416017641464[224] = 0;
   out_7234055416017641464[225] = 0;
   out_7234055416017641464[226] = 0;
   out_7234055416017641464[227] = 0;
   out_7234055416017641464[228] = 0;
   out_7234055416017641464[229] = 0;
   out_7234055416017641464[230] = 0;
   out_7234055416017641464[231] = 0;
   out_7234055416017641464[232] = 0;
   out_7234055416017641464[233] = 0;
   out_7234055416017641464[234] = 0;
   out_7234055416017641464[235] = 0;
   out_7234055416017641464[236] = 0;
   out_7234055416017641464[237] = 0;
   out_7234055416017641464[238] = 0;
   out_7234055416017641464[239] = 0;
   out_7234055416017641464[240] = 0;
   out_7234055416017641464[241] = 1.0;
   out_7234055416017641464[242] = 0;
   out_7234055416017641464[243] = 0;
   out_7234055416017641464[244] = 0;
   out_7234055416017641464[245] = 0;
   out_7234055416017641464[246] = 0;
   out_7234055416017641464[247] = 0;
   out_7234055416017641464[248] = 0;
   out_7234055416017641464[249] = 0;
   out_7234055416017641464[250] = 0;
   out_7234055416017641464[251] = 0;
   out_7234055416017641464[252] = 0;
   out_7234055416017641464[253] = 0;
   out_7234055416017641464[254] = 0;
   out_7234055416017641464[255] = 0;
   out_7234055416017641464[256] = 0;
   out_7234055416017641464[257] = 0;
   out_7234055416017641464[258] = 0;
   out_7234055416017641464[259] = 0;
   out_7234055416017641464[260] = 0;
   out_7234055416017641464[261] = 0;
   out_7234055416017641464[262] = 0;
   out_7234055416017641464[263] = 1.0;
   out_7234055416017641464[264] = 0;
   out_7234055416017641464[265] = 0;
   out_7234055416017641464[266] = 0;
   out_7234055416017641464[267] = 0;
   out_7234055416017641464[268] = 0;
   out_7234055416017641464[269] = 0;
   out_7234055416017641464[270] = 0;
   out_7234055416017641464[271] = 0;
   out_7234055416017641464[272] = 0;
   out_7234055416017641464[273] = 0;
   out_7234055416017641464[274] = 0;
   out_7234055416017641464[275] = 0;
   out_7234055416017641464[276] = 0;
   out_7234055416017641464[277] = 0;
   out_7234055416017641464[278] = 0;
   out_7234055416017641464[279] = 0;
   out_7234055416017641464[280] = 0;
   out_7234055416017641464[281] = 0;
   out_7234055416017641464[282] = 0;
   out_7234055416017641464[283] = 0;
   out_7234055416017641464[284] = 0;
   out_7234055416017641464[285] = 1.0;
   out_7234055416017641464[286] = 0;
   out_7234055416017641464[287] = 0;
   out_7234055416017641464[288] = 0;
   out_7234055416017641464[289] = 0;
   out_7234055416017641464[290] = 0;
   out_7234055416017641464[291] = 0;
   out_7234055416017641464[292] = 0;
   out_7234055416017641464[293] = 0;
   out_7234055416017641464[294] = 0;
   out_7234055416017641464[295] = 0;
   out_7234055416017641464[296] = 0;
   out_7234055416017641464[297] = 0;
   out_7234055416017641464[298] = 0;
   out_7234055416017641464[299] = 0;
   out_7234055416017641464[300] = 0;
   out_7234055416017641464[301] = 0;
   out_7234055416017641464[302] = 0;
   out_7234055416017641464[303] = 0;
   out_7234055416017641464[304] = 0;
   out_7234055416017641464[305] = 0;
   out_7234055416017641464[306] = 0;
   out_7234055416017641464[307] = 1.0;
   out_7234055416017641464[308] = 0;
   out_7234055416017641464[309] = 0;
   out_7234055416017641464[310] = 0;
   out_7234055416017641464[311] = 0;
   out_7234055416017641464[312] = 0;
   out_7234055416017641464[313] = 0;
   out_7234055416017641464[314] = 0;
   out_7234055416017641464[315] = 0;
   out_7234055416017641464[316] = 0;
   out_7234055416017641464[317] = 0;
   out_7234055416017641464[318] = 0;
   out_7234055416017641464[319] = 0;
   out_7234055416017641464[320] = 0;
   out_7234055416017641464[321] = 0;
   out_7234055416017641464[322] = 0;
   out_7234055416017641464[323] = 0;
   out_7234055416017641464[324] = 0;
   out_7234055416017641464[325] = 0;
   out_7234055416017641464[326] = 0;
   out_7234055416017641464[327] = 0;
   out_7234055416017641464[328] = 0;
   out_7234055416017641464[329] = 1.0;
   out_7234055416017641464[330] = 0;
   out_7234055416017641464[331] = 0;
   out_7234055416017641464[332] = 0;
   out_7234055416017641464[333] = 0;
   out_7234055416017641464[334] = 0;
   out_7234055416017641464[335] = 0;
   out_7234055416017641464[336] = 0;
   out_7234055416017641464[337] = 0;
   out_7234055416017641464[338] = 0;
   out_7234055416017641464[339] = 0;
   out_7234055416017641464[340] = 0;
   out_7234055416017641464[341] = 0;
   out_7234055416017641464[342] = 0;
   out_7234055416017641464[343] = 0;
   out_7234055416017641464[344] = 0;
   out_7234055416017641464[345] = 0;
   out_7234055416017641464[346] = 0;
   out_7234055416017641464[347] = 0;
   out_7234055416017641464[348] = 0;
   out_7234055416017641464[349] = 0;
   out_7234055416017641464[350] = 0;
   out_7234055416017641464[351] = 1.0;
   out_7234055416017641464[352] = 0;
   out_7234055416017641464[353] = 0;
   out_7234055416017641464[354] = 0;
   out_7234055416017641464[355] = 0;
   out_7234055416017641464[356] = 0;
   out_7234055416017641464[357] = 0;
   out_7234055416017641464[358] = 0;
   out_7234055416017641464[359] = 0;
   out_7234055416017641464[360] = 0;
   out_7234055416017641464[361] = 0;
   out_7234055416017641464[362] = 0;
   out_7234055416017641464[363] = 0;
   out_7234055416017641464[364] = 0;
   out_7234055416017641464[365] = 0;
   out_7234055416017641464[366] = 0;
   out_7234055416017641464[367] = 0;
   out_7234055416017641464[368] = 0;
   out_7234055416017641464[369] = 0;
   out_7234055416017641464[370] = 0;
   out_7234055416017641464[371] = 0;
   out_7234055416017641464[372] = 0;
   out_7234055416017641464[373] = 1.0;
   out_7234055416017641464[374] = 0;
   out_7234055416017641464[375] = 0;
   out_7234055416017641464[376] = 0;
   out_7234055416017641464[377] = 0;
   out_7234055416017641464[378] = 0;
   out_7234055416017641464[379] = 0;
   out_7234055416017641464[380] = 0;
   out_7234055416017641464[381] = 0;
   out_7234055416017641464[382] = 0;
   out_7234055416017641464[383] = 0;
   out_7234055416017641464[384] = 0;
   out_7234055416017641464[385] = 0;
   out_7234055416017641464[386] = 0;
   out_7234055416017641464[387] = 0;
   out_7234055416017641464[388] = 0;
   out_7234055416017641464[389] = 0;
   out_7234055416017641464[390] = 0;
   out_7234055416017641464[391] = 0;
   out_7234055416017641464[392] = 0;
   out_7234055416017641464[393] = 0;
   out_7234055416017641464[394] = 0;
   out_7234055416017641464[395] = 1.0;
   out_7234055416017641464[396] = 0;
   out_7234055416017641464[397] = 0;
   out_7234055416017641464[398] = 0;
   out_7234055416017641464[399] = 0;
   out_7234055416017641464[400] = 0;
   out_7234055416017641464[401] = 0;
   out_7234055416017641464[402] = 0;
   out_7234055416017641464[403] = 0;
   out_7234055416017641464[404] = 0;
   out_7234055416017641464[405] = 0;
   out_7234055416017641464[406] = 0;
   out_7234055416017641464[407] = 0;
   out_7234055416017641464[408] = 0;
   out_7234055416017641464[409] = 0;
   out_7234055416017641464[410] = 0;
   out_7234055416017641464[411] = 0;
   out_7234055416017641464[412] = 0;
   out_7234055416017641464[413] = 0;
   out_7234055416017641464[414] = 0;
   out_7234055416017641464[415] = 0;
   out_7234055416017641464[416] = 0;
   out_7234055416017641464[417] = 1.0;
   out_7234055416017641464[418] = 0;
   out_7234055416017641464[419] = 0;
   out_7234055416017641464[420] = 0;
   out_7234055416017641464[421] = 0;
   out_7234055416017641464[422] = 0;
   out_7234055416017641464[423] = 0;
   out_7234055416017641464[424] = 0;
   out_7234055416017641464[425] = 0;
   out_7234055416017641464[426] = 0;
   out_7234055416017641464[427] = 0;
   out_7234055416017641464[428] = 0;
   out_7234055416017641464[429] = 0;
   out_7234055416017641464[430] = 0;
   out_7234055416017641464[431] = 0;
   out_7234055416017641464[432] = 0;
   out_7234055416017641464[433] = 0;
   out_7234055416017641464[434] = 0;
   out_7234055416017641464[435] = 0;
   out_7234055416017641464[436] = 0;
   out_7234055416017641464[437] = 0;
   out_7234055416017641464[438] = 0;
   out_7234055416017641464[439] = 1.0;
   out_7234055416017641464[440] = 0;
   out_7234055416017641464[441] = 0;
   out_7234055416017641464[442] = 0;
   out_7234055416017641464[443] = 0;
   out_7234055416017641464[444] = 0;
   out_7234055416017641464[445] = 0;
   out_7234055416017641464[446] = 0;
   out_7234055416017641464[447] = 0;
   out_7234055416017641464[448] = 0;
   out_7234055416017641464[449] = 0;
   out_7234055416017641464[450] = 0;
   out_7234055416017641464[451] = 0;
   out_7234055416017641464[452] = 0;
   out_7234055416017641464[453] = 0;
   out_7234055416017641464[454] = 0;
   out_7234055416017641464[455] = 0;
   out_7234055416017641464[456] = 0;
   out_7234055416017641464[457] = 0;
   out_7234055416017641464[458] = 0;
   out_7234055416017641464[459] = 0;
   out_7234055416017641464[460] = 0;
   out_7234055416017641464[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9030444261325526316) {
   out_9030444261325526316[0] = dt*state[7] + state[0];
   out_9030444261325526316[1] = dt*state[8] + state[1];
   out_9030444261325526316[2] = dt*state[9] + state[2];
   out_9030444261325526316[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9030444261325526316[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9030444261325526316[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9030444261325526316[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9030444261325526316[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9030444261325526316[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9030444261325526316[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9030444261325526316[10] = state[10];
   out_9030444261325526316[11] = state[11];
   out_9030444261325526316[12] = state[12];
   out_9030444261325526316[13] = state[13];
   out_9030444261325526316[14] = state[14];
   out_9030444261325526316[15] = state[15];
   out_9030444261325526316[16] = state[16];
   out_9030444261325526316[17] = state[17];
   out_9030444261325526316[18] = state[18];
   out_9030444261325526316[19] = state[19];
   out_9030444261325526316[20] = state[20];
   out_9030444261325526316[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7927715977959496876) {
   out_7927715977959496876[0] = 1;
   out_7927715977959496876[1] = 0;
   out_7927715977959496876[2] = 0;
   out_7927715977959496876[3] = 0;
   out_7927715977959496876[4] = 0;
   out_7927715977959496876[5] = 0;
   out_7927715977959496876[6] = dt;
   out_7927715977959496876[7] = 0;
   out_7927715977959496876[8] = 0;
   out_7927715977959496876[9] = 0;
   out_7927715977959496876[10] = 0;
   out_7927715977959496876[11] = 0;
   out_7927715977959496876[12] = 0;
   out_7927715977959496876[13] = 0;
   out_7927715977959496876[14] = 0;
   out_7927715977959496876[15] = 0;
   out_7927715977959496876[16] = 0;
   out_7927715977959496876[17] = 0;
   out_7927715977959496876[18] = 0;
   out_7927715977959496876[19] = 0;
   out_7927715977959496876[20] = 0;
   out_7927715977959496876[21] = 0;
   out_7927715977959496876[22] = 1;
   out_7927715977959496876[23] = 0;
   out_7927715977959496876[24] = 0;
   out_7927715977959496876[25] = 0;
   out_7927715977959496876[26] = 0;
   out_7927715977959496876[27] = 0;
   out_7927715977959496876[28] = dt;
   out_7927715977959496876[29] = 0;
   out_7927715977959496876[30] = 0;
   out_7927715977959496876[31] = 0;
   out_7927715977959496876[32] = 0;
   out_7927715977959496876[33] = 0;
   out_7927715977959496876[34] = 0;
   out_7927715977959496876[35] = 0;
   out_7927715977959496876[36] = 0;
   out_7927715977959496876[37] = 0;
   out_7927715977959496876[38] = 0;
   out_7927715977959496876[39] = 0;
   out_7927715977959496876[40] = 0;
   out_7927715977959496876[41] = 0;
   out_7927715977959496876[42] = 0;
   out_7927715977959496876[43] = 0;
   out_7927715977959496876[44] = 1;
   out_7927715977959496876[45] = 0;
   out_7927715977959496876[46] = 0;
   out_7927715977959496876[47] = 0;
   out_7927715977959496876[48] = 0;
   out_7927715977959496876[49] = 0;
   out_7927715977959496876[50] = dt;
   out_7927715977959496876[51] = 0;
   out_7927715977959496876[52] = 0;
   out_7927715977959496876[53] = 0;
   out_7927715977959496876[54] = 0;
   out_7927715977959496876[55] = 0;
   out_7927715977959496876[56] = 0;
   out_7927715977959496876[57] = 0;
   out_7927715977959496876[58] = 0;
   out_7927715977959496876[59] = 0;
   out_7927715977959496876[60] = 0;
   out_7927715977959496876[61] = 0;
   out_7927715977959496876[62] = 0;
   out_7927715977959496876[63] = 0;
   out_7927715977959496876[64] = 0;
   out_7927715977959496876[65] = 0;
   out_7927715977959496876[66] = 1;
   out_7927715977959496876[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7927715977959496876[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7927715977959496876[69] = 0;
   out_7927715977959496876[70] = 0;
   out_7927715977959496876[71] = 0;
   out_7927715977959496876[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7927715977959496876[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7927715977959496876[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7927715977959496876[75] = 0;
   out_7927715977959496876[76] = 0;
   out_7927715977959496876[77] = 0;
   out_7927715977959496876[78] = 0;
   out_7927715977959496876[79] = 0;
   out_7927715977959496876[80] = 0;
   out_7927715977959496876[81] = 0;
   out_7927715977959496876[82] = 0;
   out_7927715977959496876[83] = 0;
   out_7927715977959496876[84] = 0;
   out_7927715977959496876[85] = 0;
   out_7927715977959496876[86] = 0;
   out_7927715977959496876[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7927715977959496876[88] = 1;
   out_7927715977959496876[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7927715977959496876[90] = 0;
   out_7927715977959496876[91] = 0;
   out_7927715977959496876[92] = 0;
   out_7927715977959496876[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7927715977959496876[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7927715977959496876[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7927715977959496876[96] = 0;
   out_7927715977959496876[97] = 0;
   out_7927715977959496876[98] = 0;
   out_7927715977959496876[99] = 0;
   out_7927715977959496876[100] = 0;
   out_7927715977959496876[101] = 0;
   out_7927715977959496876[102] = 0;
   out_7927715977959496876[103] = 0;
   out_7927715977959496876[104] = 0;
   out_7927715977959496876[105] = 0;
   out_7927715977959496876[106] = 0;
   out_7927715977959496876[107] = 0;
   out_7927715977959496876[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7927715977959496876[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7927715977959496876[110] = 1;
   out_7927715977959496876[111] = 0;
   out_7927715977959496876[112] = 0;
   out_7927715977959496876[113] = 0;
   out_7927715977959496876[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7927715977959496876[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7927715977959496876[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7927715977959496876[117] = 0;
   out_7927715977959496876[118] = 0;
   out_7927715977959496876[119] = 0;
   out_7927715977959496876[120] = 0;
   out_7927715977959496876[121] = 0;
   out_7927715977959496876[122] = 0;
   out_7927715977959496876[123] = 0;
   out_7927715977959496876[124] = 0;
   out_7927715977959496876[125] = 0;
   out_7927715977959496876[126] = 0;
   out_7927715977959496876[127] = 0;
   out_7927715977959496876[128] = 0;
   out_7927715977959496876[129] = 0;
   out_7927715977959496876[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7927715977959496876[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7927715977959496876[132] = 1;
   out_7927715977959496876[133] = 0;
   out_7927715977959496876[134] = 0;
   out_7927715977959496876[135] = 0;
   out_7927715977959496876[136] = 0;
   out_7927715977959496876[137] = 0;
   out_7927715977959496876[138] = 0;
   out_7927715977959496876[139] = 0;
   out_7927715977959496876[140] = 0;
   out_7927715977959496876[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7927715977959496876[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7927715977959496876[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7927715977959496876[144] = 0;
   out_7927715977959496876[145] = 0;
   out_7927715977959496876[146] = 0;
   out_7927715977959496876[147] = 0;
   out_7927715977959496876[148] = 0;
   out_7927715977959496876[149] = 0;
   out_7927715977959496876[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7927715977959496876[151] = 0;
   out_7927715977959496876[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7927715977959496876[153] = 0;
   out_7927715977959496876[154] = 1;
   out_7927715977959496876[155] = 0;
   out_7927715977959496876[156] = 0;
   out_7927715977959496876[157] = 0;
   out_7927715977959496876[158] = 0;
   out_7927715977959496876[159] = 0;
   out_7927715977959496876[160] = 0;
   out_7927715977959496876[161] = 0;
   out_7927715977959496876[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7927715977959496876[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7927715977959496876[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7927715977959496876[165] = 0;
   out_7927715977959496876[166] = 0;
   out_7927715977959496876[167] = 0;
   out_7927715977959496876[168] = 0;
   out_7927715977959496876[169] = 0;
   out_7927715977959496876[170] = 0;
   out_7927715977959496876[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7927715977959496876[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7927715977959496876[173] = 0;
   out_7927715977959496876[174] = 0;
   out_7927715977959496876[175] = 0;
   out_7927715977959496876[176] = 1;
   out_7927715977959496876[177] = 0;
   out_7927715977959496876[178] = 0;
   out_7927715977959496876[179] = 0;
   out_7927715977959496876[180] = 0;
   out_7927715977959496876[181] = 0;
   out_7927715977959496876[182] = 0;
   out_7927715977959496876[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7927715977959496876[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7927715977959496876[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7927715977959496876[186] = 0;
   out_7927715977959496876[187] = 0;
   out_7927715977959496876[188] = 0;
   out_7927715977959496876[189] = 0;
   out_7927715977959496876[190] = 0;
   out_7927715977959496876[191] = 0;
   out_7927715977959496876[192] = 0;
   out_7927715977959496876[193] = 0;
   out_7927715977959496876[194] = 0;
   out_7927715977959496876[195] = 0;
   out_7927715977959496876[196] = 0;
   out_7927715977959496876[197] = 0;
   out_7927715977959496876[198] = 1;
   out_7927715977959496876[199] = 0;
   out_7927715977959496876[200] = 0;
   out_7927715977959496876[201] = 0;
   out_7927715977959496876[202] = 0;
   out_7927715977959496876[203] = 0;
   out_7927715977959496876[204] = 0;
   out_7927715977959496876[205] = 0;
   out_7927715977959496876[206] = 0;
   out_7927715977959496876[207] = 0;
   out_7927715977959496876[208] = 0;
   out_7927715977959496876[209] = 0;
   out_7927715977959496876[210] = 0;
   out_7927715977959496876[211] = 0;
   out_7927715977959496876[212] = 0;
   out_7927715977959496876[213] = 0;
   out_7927715977959496876[214] = 0;
   out_7927715977959496876[215] = 0;
   out_7927715977959496876[216] = 0;
   out_7927715977959496876[217] = 0;
   out_7927715977959496876[218] = 0;
   out_7927715977959496876[219] = 0;
   out_7927715977959496876[220] = 1;
   out_7927715977959496876[221] = 0;
   out_7927715977959496876[222] = 0;
   out_7927715977959496876[223] = 0;
   out_7927715977959496876[224] = 0;
   out_7927715977959496876[225] = 0;
   out_7927715977959496876[226] = 0;
   out_7927715977959496876[227] = 0;
   out_7927715977959496876[228] = 0;
   out_7927715977959496876[229] = 0;
   out_7927715977959496876[230] = 0;
   out_7927715977959496876[231] = 0;
   out_7927715977959496876[232] = 0;
   out_7927715977959496876[233] = 0;
   out_7927715977959496876[234] = 0;
   out_7927715977959496876[235] = 0;
   out_7927715977959496876[236] = 0;
   out_7927715977959496876[237] = 0;
   out_7927715977959496876[238] = 0;
   out_7927715977959496876[239] = 0;
   out_7927715977959496876[240] = 0;
   out_7927715977959496876[241] = 0;
   out_7927715977959496876[242] = 1;
   out_7927715977959496876[243] = 0;
   out_7927715977959496876[244] = 0;
   out_7927715977959496876[245] = 0;
   out_7927715977959496876[246] = 0;
   out_7927715977959496876[247] = 0;
   out_7927715977959496876[248] = 0;
   out_7927715977959496876[249] = 0;
   out_7927715977959496876[250] = 0;
   out_7927715977959496876[251] = 0;
   out_7927715977959496876[252] = 0;
   out_7927715977959496876[253] = 0;
   out_7927715977959496876[254] = 0;
   out_7927715977959496876[255] = 0;
   out_7927715977959496876[256] = 0;
   out_7927715977959496876[257] = 0;
   out_7927715977959496876[258] = 0;
   out_7927715977959496876[259] = 0;
   out_7927715977959496876[260] = 0;
   out_7927715977959496876[261] = 0;
   out_7927715977959496876[262] = 0;
   out_7927715977959496876[263] = 0;
   out_7927715977959496876[264] = 1;
   out_7927715977959496876[265] = 0;
   out_7927715977959496876[266] = 0;
   out_7927715977959496876[267] = 0;
   out_7927715977959496876[268] = 0;
   out_7927715977959496876[269] = 0;
   out_7927715977959496876[270] = 0;
   out_7927715977959496876[271] = 0;
   out_7927715977959496876[272] = 0;
   out_7927715977959496876[273] = 0;
   out_7927715977959496876[274] = 0;
   out_7927715977959496876[275] = 0;
   out_7927715977959496876[276] = 0;
   out_7927715977959496876[277] = 0;
   out_7927715977959496876[278] = 0;
   out_7927715977959496876[279] = 0;
   out_7927715977959496876[280] = 0;
   out_7927715977959496876[281] = 0;
   out_7927715977959496876[282] = 0;
   out_7927715977959496876[283] = 0;
   out_7927715977959496876[284] = 0;
   out_7927715977959496876[285] = 0;
   out_7927715977959496876[286] = 1;
   out_7927715977959496876[287] = 0;
   out_7927715977959496876[288] = 0;
   out_7927715977959496876[289] = 0;
   out_7927715977959496876[290] = 0;
   out_7927715977959496876[291] = 0;
   out_7927715977959496876[292] = 0;
   out_7927715977959496876[293] = 0;
   out_7927715977959496876[294] = 0;
   out_7927715977959496876[295] = 0;
   out_7927715977959496876[296] = 0;
   out_7927715977959496876[297] = 0;
   out_7927715977959496876[298] = 0;
   out_7927715977959496876[299] = 0;
   out_7927715977959496876[300] = 0;
   out_7927715977959496876[301] = 0;
   out_7927715977959496876[302] = 0;
   out_7927715977959496876[303] = 0;
   out_7927715977959496876[304] = 0;
   out_7927715977959496876[305] = 0;
   out_7927715977959496876[306] = 0;
   out_7927715977959496876[307] = 0;
   out_7927715977959496876[308] = 1;
   out_7927715977959496876[309] = 0;
   out_7927715977959496876[310] = 0;
   out_7927715977959496876[311] = 0;
   out_7927715977959496876[312] = 0;
   out_7927715977959496876[313] = 0;
   out_7927715977959496876[314] = 0;
   out_7927715977959496876[315] = 0;
   out_7927715977959496876[316] = 0;
   out_7927715977959496876[317] = 0;
   out_7927715977959496876[318] = 0;
   out_7927715977959496876[319] = 0;
   out_7927715977959496876[320] = 0;
   out_7927715977959496876[321] = 0;
   out_7927715977959496876[322] = 0;
   out_7927715977959496876[323] = 0;
   out_7927715977959496876[324] = 0;
   out_7927715977959496876[325] = 0;
   out_7927715977959496876[326] = 0;
   out_7927715977959496876[327] = 0;
   out_7927715977959496876[328] = 0;
   out_7927715977959496876[329] = 0;
   out_7927715977959496876[330] = 1;
   out_7927715977959496876[331] = 0;
   out_7927715977959496876[332] = 0;
   out_7927715977959496876[333] = 0;
   out_7927715977959496876[334] = 0;
   out_7927715977959496876[335] = 0;
   out_7927715977959496876[336] = 0;
   out_7927715977959496876[337] = 0;
   out_7927715977959496876[338] = 0;
   out_7927715977959496876[339] = 0;
   out_7927715977959496876[340] = 0;
   out_7927715977959496876[341] = 0;
   out_7927715977959496876[342] = 0;
   out_7927715977959496876[343] = 0;
   out_7927715977959496876[344] = 0;
   out_7927715977959496876[345] = 0;
   out_7927715977959496876[346] = 0;
   out_7927715977959496876[347] = 0;
   out_7927715977959496876[348] = 0;
   out_7927715977959496876[349] = 0;
   out_7927715977959496876[350] = 0;
   out_7927715977959496876[351] = 0;
   out_7927715977959496876[352] = 1;
   out_7927715977959496876[353] = 0;
   out_7927715977959496876[354] = 0;
   out_7927715977959496876[355] = 0;
   out_7927715977959496876[356] = 0;
   out_7927715977959496876[357] = 0;
   out_7927715977959496876[358] = 0;
   out_7927715977959496876[359] = 0;
   out_7927715977959496876[360] = 0;
   out_7927715977959496876[361] = 0;
   out_7927715977959496876[362] = 0;
   out_7927715977959496876[363] = 0;
   out_7927715977959496876[364] = 0;
   out_7927715977959496876[365] = 0;
   out_7927715977959496876[366] = 0;
   out_7927715977959496876[367] = 0;
   out_7927715977959496876[368] = 0;
   out_7927715977959496876[369] = 0;
   out_7927715977959496876[370] = 0;
   out_7927715977959496876[371] = 0;
   out_7927715977959496876[372] = 0;
   out_7927715977959496876[373] = 0;
   out_7927715977959496876[374] = 1;
   out_7927715977959496876[375] = 0;
   out_7927715977959496876[376] = 0;
   out_7927715977959496876[377] = 0;
   out_7927715977959496876[378] = 0;
   out_7927715977959496876[379] = 0;
   out_7927715977959496876[380] = 0;
   out_7927715977959496876[381] = 0;
   out_7927715977959496876[382] = 0;
   out_7927715977959496876[383] = 0;
   out_7927715977959496876[384] = 0;
   out_7927715977959496876[385] = 0;
   out_7927715977959496876[386] = 0;
   out_7927715977959496876[387] = 0;
   out_7927715977959496876[388] = 0;
   out_7927715977959496876[389] = 0;
   out_7927715977959496876[390] = 0;
   out_7927715977959496876[391] = 0;
   out_7927715977959496876[392] = 0;
   out_7927715977959496876[393] = 0;
   out_7927715977959496876[394] = 0;
   out_7927715977959496876[395] = 0;
   out_7927715977959496876[396] = 1;
   out_7927715977959496876[397] = 0;
   out_7927715977959496876[398] = 0;
   out_7927715977959496876[399] = 0;
   out_7927715977959496876[400] = 0;
   out_7927715977959496876[401] = 0;
   out_7927715977959496876[402] = 0;
   out_7927715977959496876[403] = 0;
   out_7927715977959496876[404] = 0;
   out_7927715977959496876[405] = 0;
   out_7927715977959496876[406] = 0;
   out_7927715977959496876[407] = 0;
   out_7927715977959496876[408] = 0;
   out_7927715977959496876[409] = 0;
   out_7927715977959496876[410] = 0;
   out_7927715977959496876[411] = 0;
   out_7927715977959496876[412] = 0;
   out_7927715977959496876[413] = 0;
   out_7927715977959496876[414] = 0;
   out_7927715977959496876[415] = 0;
   out_7927715977959496876[416] = 0;
   out_7927715977959496876[417] = 0;
   out_7927715977959496876[418] = 1;
   out_7927715977959496876[419] = 0;
   out_7927715977959496876[420] = 0;
   out_7927715977959496876[421] = 0;
   out_7927715977959496876[422] = 0;
   out_7927715977959496876[423] = 0;
   out_7927715977959496876[424] = 0;
   out_7927715977959496876[425] = 0;
   out_7927715977959496876[426] = 0;
   out_7927715977959496876[427] = 0;
   out_7927715977959496876[428] = 0;
   out_7927715977959496876[429] = 0;
   out_7927715977959496876[430] = 0;
   out_7927715977959496876[431] = 0;
   out_7927715977959496876[432] = 0;
   out_7927715977959496876[433] = 0;
   out_7927715977959496876[434] = 0;
   out_7927715977959496876[435] = 0;
   out_7927715977959496876[436] = 0;
   out_7927715977959496876[437] = 0;
   out_7927715977959496876[438] = 0;
   out_7927715977959496876[439] = 0;
   out_7927715977959496876[440] = 1;
}
void h_4(double *state, double *unused, double *out_3637205304344111796) {
   out_3637205304344111796[0] = state[10] + state[13];
   out_3637205304344111796[1] = state[11] + state[14];
   out_3637205304344111796[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3199237687935458826) {
   out_3199237687935458826[0] = 0;
   out_3199237687935458826[1] = 0;
   out_3199237687935458826[2] = 0;
   out_3199237687935458826[3] = 0;
   out_3199237687935458826[4] = 0;
   out_3199237687935458826[5] = 0;
   out_3199237687935458826[6] = 0;
   out_3199237687935458826[7] = 0;
   out_3199237687935458826[8] = 0;
   out_3199237687935458826[9] = 0;
   out_3199237687935458826[10] = 1;
   out_3199237687935458826[11] = 0;
   out_3199237687935458826[12] = 0;
   out_3199237687935458826[13] = 1;
   out_3199237687935458826[14] = 0;
   out_3199237687935458826[15] = 0;
   out_3199237687935458826[16] = 0;
   out_3199237687935458826[17] = 0;
   out_3199237687935458826[18] = 0;
   out_3199237687935458826[19] = 0;
   out_3199237687935458826[20] = 0;
   out_3199237687935458826[21] = 0;
   out_3199237687935458826[22] = 0;
   out_3199237687935458826[23] = 0;
   out_3199237687935458826[24] = 0;
   out_3199237687935458826[25] = 0;
   out_3199237687935458826[26] = 0;
   out_3199237687935458826[27] = 0;
   out_3199237687935458826[28] = 0;
   out_3199237687935458826[29] = 0;
   out_3199237687935458826[30] = 0;
   out_3199237687935458826[31] = 0;
   out_3199237687935458826[32] = 0;
   out_3199237687935458826[33] = 1;
   out_3199237687935458826[34] = 0;
   out_3199237687935458826[35] = 0;
   out_3199237687935458826[36] = 1;
   out_3199237687935458826[37] = 0;
   out_3199237687935458826[38] = 0;
   out_3199237687935458826[39] = 0;
   out_3199237687935458826[40] = 0;
   out_3199237687935458826[41] = 0;
   out_3199237687935458826[42] = 0;
   out_3199237687935458826[43] = 0;
   out_3199237687935458826[44] = 0;
   out_3199237687935458826[45] = 0;
   out_3199237687935458826[46] = 0;
   out_3199237687935458826[47] = 0;
   out_3199237687935458826[48] = 0;
   out_3199237687935458826[49] = 0;
   out_3199237687935458826[50] = 0;
   out_3199237687935458826[51] = 0;
   out_3199237687935458826[52] = 0;
   out_3199237687935458826[53] = 0;
   out_3199237687935458826[54] = 0;
   out_3199237687935458826[55] = 0;
   out_3199237687935458826[56] = 1;
   out_3199237687935458826[57] = 0;
   out_3199237687935458826[58] = 0;
   out_3199237687935458826[59] = 1;
   out_3199237687935458826[60] = 0;
   out_3199237687935458826[61] = 0;
   out_3199237687935458826[62] = 0;
   out_3199237687935458826[63] = 0;
   out_3199237687935458826[64] = 0;
   out_3199237687935458826[65] = 0;
}
void h_9(double *state, double *unused, double *out_6939023978727812761) {
   out_6939023978727812761[0] = state[10];
   out_6939023978727812761[1] = state[11];
   out_6939023978727812761[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2958048041305868181) {
   out_2958048041305868181[0] = 0;
   out_2958048041305868181[1] = 0;
   out_2958048041305868181[2] = 0;
   out_2958048041305868181[3] = 0;
   out_2958048041305868181[4] = 0;
   out_2958048041305868181[5] = 0;
   out_2958048041305868181[6] = 0;
   out_2958048041305868181[7] = 0;
   out_2958048041305868181[8] = 0;
   out_2958048041305868181[9] = 0;
   out_2958048041305868181[10] = 1;
   out_2958048041305868181[11] = 0;
   out_2958048041305868181[12] = 0;
   out_2958048041305868181[13] = 0;
   out_2958048041305868181[14] = 0;
   out_2958048041305868181[15] = 0;
   out_2958048041305868181[16] = 0;
   out_2958048041305868181[17] = 0;
   out_2958048041305868181[18] = 0;
   out_2958048041305868181[19] = 0;
   out_2958048041305868181[20] = 0;
   out_2958048041305868181[21] = 0;
   out_2958048041305868181[22] = 0;
   out_2958048041305868181[23] = 0;
   out_2958048041305868181[24] = 0;
   out_2958048041305868181[25] = 0;
   out_2958048041305868181[26] = 0;
   out_2958048041305868181[27] = 0;
   out_2958048041305868181[28] = 0;
   out_2958048041305868181[29] = 0;
   out_2958048041305868181[30] = 0;
   out_2958048041305868181[31] = 0;
   out_2958048041305868181[32] = 0;
   out_2958048041305868181[33] = 1;
   out_2958048041305868181[34] = 0;
   out_2958048041305868181[35] = 0;
   out_2958048041305868181[36] = 0;
   out_2958048041305868181[37] = 0;
   out_2958048041305868181[38] = 0;
   out_2958048041305868181[39] = 0;
   out_2958048041305868181[40] = 0;
   out_2958048041305868181[41] = 0;
   out_2958048041305868181[42] = 0;
   out_2958048041305868181[43] = 0;
   out_2958048041305868181[44] = 0;
   out_2958048041305868181[45] = 0;
   out_2958048041305868181[46] = 0;
   out_2958048041305868181[47] = 0;
   out_2958048041305868181[48] = 0;
   out_2958048041305868181[49] = 0;
   out_2958048041305868181[50] = 0;
   out_2958048041305868181[51] = 0;
   out_2958048041305868181[52] = 0;
   out_2958048041305868181[53] = 0;
   out_2958048041305868181[54] = 0;
   out_2958048041305868181[55] = 0;
   out_2958048041305868181[56] = 1;
   out_2958048041305868181[57] = 0;
   out_2958048041305868181[58] = 0;
   out_2958048041305868181[59] = 0;
   out_2958048041305868181[60] = 0;
   out_2958048041305868181[61] = 0;
   out_2958048041305868181[62] = 0;
   out_2958048041305868181[63] = 0;
   out_2958048041305868181[64] = 0;
   out_2958048041305868181[65] = 0;
}
void h_10(double *state, double *unused, double *out_5134952168813292064) {
   out_5134952168813292064[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5134952168813292064[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5134952168813292064[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2518434904635089190) {
   out_2518434904635089190[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2518434904635089190[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2518434904635089190[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2518434904635089190[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2518434904635089190[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2518434904635089190[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2518434904635089190[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2518434904635089190[7] = 0;
   out_2518434904635089190[8] = 0;
   out_2518434904635089190[9] = 0;
   out_2518434904635089190[10] = 0;
   out_2518434904635089190[11] = 0;
   out_2518434904635089190[12] = 0;
   out_2518434904635089190[13] = 0;
   out_2518434904635089190[14] = 0;
   out_2518434904635089190[15] = 0;
   out_2518434904635089190[16] = 1;
   out_2518434904635089190[17] = 0;
   out_2518434904635089190[18] = 0;
   out_2518434904635089190[19] = 1;
   out_2518434904635089190[20] = 0;
   out_2518434904635089190[21] = 0;
   out_2518434904635089190[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2518434904635089190[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2518434904635089190[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2518434904635089190[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2518434904635089190[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2518434904635089190[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2518434904635089190[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2518434904635089190[29] = 0;
   out_2518434904635089190[30] = 0;
   out_2518434904635089190[31] = 0;
   out_2518434904635089190[32] = 0;
   out_2518434904635089190[33] = 0;
   out_2518434904635089190[34] = 0;
   out_2518434904635089190[35] = 0;
   out_2518434904635089190[36] = 0;
   out_2518434904635089190[37] = 0;
   out_2518434904635089190[38] = 0;
   out_2518434904635089190[39] = 1;
   out_2518434904635089190[40] = 0;
   out_2518434904635089190[41] = 0;
   out_2518434904635089190[42] = 1;
   out_2518434904635089190[43] = 0;
   out_2518434904635089190[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2518434904635089190[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2518434904635089190[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2518434904635089190[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2518434904635089190[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2518434904635089190[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2518434904635089190[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2518434904635089190[51] = 0;
   out_2518434904635089190[52] = 0;
   out_2518434904635089190[53] = 0;
   out_2518434904635089190[54] = 0;
   out_2518434904635089190[55] = 0;
   out_2518434904635089190[56] = 0;
   out_2518434904635089190[57] = 0;
   out_2518434904635089190[58] = 0;
   out_2518434904635089190[59] = 0;
   out_2518434904635089190[60] = 0;
   out_2518434904635089190[61] = 0;
   out_2518434904635089190[62] = 1;
   out_2518434904635089190[63] = 0;
   out_2518434904635089190[64] = 0;
   out_2518434904635089190[65] = 1;
}
void h_12(double *state, double *unused, double *out_3209066940974086290) {
   out_3209066940974086290[0] = state[0];
   out_3209066940974086290[1] = state[1];
   out_3209066940974086290[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1820218720096502969) {
   out_1820218720096502969[0] = 1;
   out_1820218720096502969[1] = 0;
   out_1820218720096502969[2] = 0;
   out_1820218720096502969[3] = 0;
   out_1820218720096502969[4] = 0;
   out_1820218720096502969[5] = 0;
   out_1820218720096502969[6] = 0;
   out_1820218720096502969[7] = 0;
   out_1820218720096502969[8] = 0;
   out_1820218720096502969[9] = 0;
   out_1820218720096502969[10] = 0;
   out_1820218720096502969[11] = 0;
   out_1820218720096502969[12] = 0;
   out_1820218720096502969[13] = 0;
   out_1820218720096502969[14] = 0;
   out_1820218720096502969[15] = 0;
   out_1820218720096502969[16] = 0;
   out_1820218720096502969[17] = 0;
   out_1820218720096502969[18] = 0;
   out_1820218720096502969[19] = 0;
   out_1820218720096502969[20] = 0;
   out_1820218720096502969[21] = 0;
   out_1820218720096502969[22] = 0;
   out_1820218720096502969[23] = 1;
   out_1820218720096502969[24] = 0;
   out_1820218720096502969[25] = 0;
   out_1820218720096502969[26] = 0;
   out_1820218720096502969[27] = 0;
   out_1820218720096502969[28] = 0;
   out_1820218720096502969[29] = 0;
   out_1820218720096502969[30] = 0;
   out_1820218720096502969[31] = 0;
   out_1820218720096502969[32] = 0;
   out_1820218720096502969[33] = 0;
   out_1820218720096502969[34] = 0;
   out_1820218720096502969[35] = 0;
   out_1820218720096502969[36] = 0;
   out_1820218720096502969[37] = 0;
   out_1820218720096502969[38] = 0;
   out_1820218720096502969[39] = 0;
   out_1820218720096502969[40] = 0;
   out_1820218720096502969[41] = 0;
   out_1820218720096502969[42] = 0;
   out_1820218720096502969[43] = 0;
   out_1820218720096502969[44] = 0;
   out_1820218720096502969[45] = 0;
   out_1820218720096502969[46] = 1;
   out_1820218720096502969[47] = 0;
   out_1820218720096502969[48] = 0;
   out_1820218720096502969[49] = 0;
   out_1820218720096502969[50] = 0;
   out_1820218720096502969[51] = 0;
   out_1820218720096502969[52] = 0;
   out_1820218720096502969[53] = 0;
   out_1820218720096502969[54] = 0;
   out_1820218720096502969[55] = 0;
   out_1820218720096502969[56] = 0;
   out_1820218720096502969[57] = 0;
   out_1820218720096502969[58] = 0;
   out_1820218720096502969[59] = 0;
   out_1820218720096502969[60] = 0;
   out_1820218720096502969[61] = 0;
   out_1820218720096502969[62] = 0;
   out_1820218720096502969[63] = 0;
   out_1820218720096502969[64] = 0;
   out_1820218720096502969[65] = 0;
}
void h_35(double *state, double *unused, double *out_246045669141529389) {
   out_246045669141529389[0] = state[7];
   out_246045669141529389[1] = state[8];
   out_246045669141529389[2] = state[9];
}
void H_35(double *state, double *unused, double *out_167424369437148550) {
   out_167424369437148550[0] = 0;
   out_167424369437148550[1] = 0;
   out_167424369437148550[2] = 0;
   out_167424369437148550[3] = 0;
   out_167424369437148550[4] = 0;
   out_167424369437148550[5] = 0;
   out_167424369437148550[6] = 0;
   out_167424369437148550[7] = 1;
   out_167424369437148550[8] = 0;
   out_167424369437148550[9] = 0;
   out_167424369437148550[10] = 0;
   out_167424369437148550[11] = 0;
   out_167424369437148550[12] = 0;
   out_167424369437148550[13] = 0;
   out_167424369437148550[14] = 0;
   out_167424369437148550[15] = 0;
   out_167424369437148550[16] = 0;
   out_167424369437148550[17] = 0;
   out_167424369437148550[18] = 0;
   out_167424369437148550[19] = 0;
   out_167424369437148550[20] = 0;
   out_167424369437148550[21] = 0;
   out_167424369437148550[22] = 0;
   out_167424369437148550[23] = 0;
   out_167424369437148550[24] = 0;
   out_167424369437148550[25] = 0;
   out_167424369437148550[26] = 0;
   out_167424369437148550[27] = 0;
   out_167424369437148550[28] = 0;
   out_167424369437148550[29] = 0;
   out_167424369437148550[30] = 1;
   out_167424369437148550[31] = 0;
   out_167424369437148550[32] = 0;
   out_167424369437148550[33] = 0;
   out_167424369437148550[34] = 0;
   out_167424369437148550[35] = 0;
   out_167424369437148550[36] = 0;
   out_167424369437148550[37] = 0;
   out_167424369437148550[38] = 0;
   out_167424369437148550[39] = 0;
   out_167424369437148550[40] = 0;
   out_167424369437148550[41] = 0;
   out_167424369437148550[42] = 0;
   out_167424369437148550[43] = 0;
   out_167424369437148550[44] = 0;
   out_167424369437148550[45] = 0;
   out_167424369437148550[46] = 0;
   out_167424369437148550[47] = 0;
   out_167424369437148550[48] = 0;
   out_167424369437148550[49] = 0;
   out_167424369437148550[50] = 0;
   out_167424369437148550[51] = 0;
   out_167424369437148550[52] = 0;
   out_167424369437148550[53] = 1;
   out_167424369437148550[54] = 0;
   out_167424369437148550[55] = 0;
   out_167424369437148550[56] = 0;
   out_167424369437148550[57] = 0;
   out_167424369437148550[58] = 0;
   out_167424369437148550[59] = 0;
   out_167424369437148550[60] = 0;
   out_167424369437148550[61] = 0;
   out_167424369437148550[62] = 0;
   out_167424369437148550[63] = 0;
   out_167424369437148550[64] = 0;
   out_167424369437148550[65] = 0;
}
void h_32(double *state, double *unused, double *out_4754195077562618053) {
   out_4754195077562618053[0] = state[3];
   out_4754195077562618053[1] = state[4];
   out_4754195077562618053[2] = state[5];
   out_4754195077562618053[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6747440134256967806) {
   out_6747440134256967806[0] = 0;
   out_6747440134256967806[1] = 0;
   out_6747440134256967806[2] = 0;
   out_6747440134256967806[3] = 1;
   out_6747440134256967806[4] = 0;
   out_6747440134256967806[5] = 0;
   out_6747440134256967806[6] = 0;
   out_6747440134256967806[7] = 0;
   out_6747440134256967806[8] = 0;
   out_6747440134256967806[9] = 0;
   out_6747440134256967806[10] = 0;
   out_6747440134256967806[11] = 0;
   out_6747440134256967806[12] = 0;
   out_6747440134256967806[13] = 0;
   out_6747440134256967806[14] = 0;
   out_6747440134256967806[15] = 0;
   out_6747440134256967806[16] = 0;
   out_6747440134256967806[17] = 0;
   out_6747440134256967806[18] = 0;
   out_6747440134256967806[19] = 0;
   out_6747440134256967806[20] = 0;
   out_6747440134256967806[21] = 0;
   out_6747440134256967806[22] = 0;
   out_6747440134256967806[23] = 0;
   out_6747440134256967806[24] = 0;
   out_6747440134256967806[25] = 0;
   out_6747440134256967806[26] = 1;
   out_6747440134256967806[27] = 0;
   out_6747440134256967806[28] = 0;
   out_6747440134256967806[29] = 0;
   out_6747440134256967806[30] = 0;
   out_6747440134256967806[31] = 0;
   out_6747440134256967806[32] = 0;
   out_6747440134256967806[33] = 0;
   out_6747440134256967806[34] = 0;
   out_6747440134256967806[35] = 0;
   out_6747440134256967806[36] = 0;
   out_6747440134256967806[37] = 0;
   out_6747440134256967806[38] = 0;
   out_6747440134256967806[39] = 0;
   out_6747440134256967806[40] = 0;
   out_6747440134256967806[41] = 0;
   out_6747440134256967806[42] = 0;
   out_6747440134256967806[43] = 0;
   out_6747440134256967806[44] = 0;
   out_6747440134256967806[45] = 0;
   out_6747440134256967806[46] = 0;
   out_6747440134256967806[47] = 0;
   out_6747440134256967806[48] = 0;
   out_6747440134256967806[49] = 1;
   out_6747440134256967806[50] = 0;
   out_6747440134256967806[51] = 0;
   out_6747440134256967806[52] = 0;
   out_6747440134256967806[53] = 0;
   out_6747440134256967806[54] = 0;
   out_6747440134256967806[55] = 0;
   out_6747440134256967806[56] = 0;
   out_6747440134256967806[57] = 0;
   out_6747440134256967806[58] = 0;
   out_6747440134256967806[59] = 0;
   out_6747440134256967806[60] = 0;
   out_6747440134256967806[61] = 0;
   out_6747440134256967806[62] = 0;
   out_6747440134256967806[63] = 0;
   out_6747440134256967806[64] = 0;
   out_6747440134256967806[65] = 0;
   out_6747440134256967806[66] = 0;
   out_6747440134256967806[67] = 0;
   out_6747440134256967806[68] = 0;
   out_6747440134256967806[69] = 0;
   out_6747440134256967806[70] = 0;
   out_6747440134256967806[71] = 0;
   out_6747440134256967806[72] = 1;
   out_6747440134256967806[73] = 0;
   out_6747440134256967806[74] = 0;
   out_6747440134256967806[75] = 0;
   out_6747440134256967806[76] = 0;
   out_6747440134256967806[77] = 0;
   out_6747440134256967806[78] = 0;
   out_6747440134256967806[79] = 0;
   out_6747440134256967806[80] = 0;
   out_6747440134256967806[81] = 0;
   out_6747440134256967806[82] = 0;
   out_6747440134256967806[83] = 0;
   out_6747440134256967806[84] = 0;
   out_6747440134256967806[85] = 0;
   out_6747440134256967806[86] = 0;
   out_6747440134256967806[87] = 0;
}
void h_13(double *state, double *unused, double *out_4247384275599747322) {
   out_4247384275599747322[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4247384275599747322[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4247384275599747322[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1067669662797967462) {
   out_1067669662797967462[0] = 0;
   out_1067669662797967462[1] = 0;
   out_1067669662797967462[2] = 0;
   out_1067669662797967462[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1067669662797967462[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1067669662797967462[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1067669662797967462[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1067669662797967462[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1067669662797967462[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1067669662797967462[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1067669662797967462[10] = 0;
   out_1067669662797967462[11] = 0;
   out_1067669662797967462[12] = 0;
   out_1067669662797967462[13] = 0;
   out_1067669662797967462[14] = 0;
   out_1067669662797967462[15] = 0;
   out_1067669662797967462[16] = 0;
   out_1067669662797967462[17] = 0;
   out_1067669662797967462[18] = 0;
   out_1067669662797967462[19] = 0;
   out_1067669662797967462[20] = 0;
   out_1067669662797967462[21] = 0;
   out_1067669662797967462[22] = 0;
   out_1067669662797967462[23] = 0;
   out_1067669662797967462[24] = 0;
   out_1067669662797967462[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1067669662797967462[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1067669662797967462[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1067669662797967462[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1067669662797967462[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1067669662797967462[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1067669662797967462[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1067669662797967462[32] = 0;
   out_1067669662797967462[33] = 0;
   out_1067669662797967462[34] = 0;
   out_1067669662797967462[35] = 0;
   out_1067669662797967462[36] = 0;
   out_1067669662797967462[37] = 0;
   out_1067669662797967462[38] = 0;
   out_1067669662797967462[39] = 0;
   out_1067669662797967462[40] = 0;
   out_1067669662797967462[41] = 0;
   out_1067669662797967462[42] = 0;
   out_1067669662797967462[43] = 0;
   out_1067669662797967462[44] = 0;
   out_1067669662797967462[45] = 0;
   out_1067669662797967462[46] = 0;
   out_1067669662797967462[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1067669662797967462[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1067669662797967462[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1067669662797967462[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1067669662797967462[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1067669662797967462[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1067669662797967462[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1067669662797967462[54] = 0;
   out_1067669662797967462[55] = 0;
   out_1067669662797967462[56] = 0;
   out_1067669662797967462[57] = 0;
   out_1067669662797967462[58] = 0;
   out_1067669662797967462[59] = 0;
   out_1067669662797967462[60] = 0;
   out_1067669662797967462[61] = 0;
   out_1067669662797967462[62] = 0;
   out_1067669662797967462[63] = 0;
   out_1067669662797967462[64] = 0;
   out_1067669662797967462[65] = 0;
}
void h_14(double *state, double *unused, double *out_6939023978727812761) {
   out_6939023978727812761[0] = state[10];
   out_6939023978727812761[1] = state[11];
   out_6939023978727812761[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2958048041305868181) {
   out_2958048041305868181[0] = 0;
   out_2958048041305868181[1] = 0;
   out_2958048041305868181[2] = 0;
   out_2958048041305868181[3] = 0;
   out_2958048041305868181[4] = 0;
   out_2958048041305868181[5] = 0;
   out_2958048041305868181[6] = 0;
   out_2958048041305868181[7] = 0;
   out_2958048041305868181[8] = 0;
   out_2958048041305868181[9] = 0;
   out_2958048041305868181[10] = 1;
   out_2958048041305868181[11] = 0;
   out_2958048041305868181[12] = 0;
   out_2958048041305868181[13] = 0;
   out_2958048041305868181[14] = 0;
   out_2958048041305868181[15] = 0;
   out_2958048041305868181[16] = 0;
   out_2958048041305868181[17] = 0;
   out_2958048041305868181[18] = 0;
   out_2958048041305868181[19] = 0;
   out_2958048041305868181[20] = 0;
   out_2958048041305868181[21] = 0;
   out_2958048041305868181[22] = 0;
   out_2958048041305868181[23] = 0;
   out_2958048041305868181[24] = 0;
   out_2958048041305868181[25] = 0;
   out_2958048041305868181[26] = 0;
   out_2958048041305868181[27] = 0;
   out_2958048041305868181[28] = 0;
   out_2958048041305868181[29] = 0;
   out_2958048041305868181[30] = 0;
   out_2958048041305868181[31] = 0;
   out_2958048041305868181[32] = 0;
   out_2958048041305868181[33] = 1;
   out_2958048041305868181[34] = 0;
   out_2958048041305868181[35] = 0;
   out_2958048041305868181[36] = 0;
   out_2958048041305868181[37] = 0;
   out_2958048041305868181[38] = 0;
   out_2958048041305868181[39] = 0;
   out_2958048041305868181[40] = 0;
   out_2958048041305868181[41] = 0;
   out_2958048041305868181[42] = 0;
   out_2958048041305868181[43] = 0;
   out_2958048041305868181[44] = 0;
   out_2958048041305868181[45] = 0;
   out_2958048041305868181[46] = 0;
   out_2958048041305868181[47] = 0;
   out_2958048041305868181[48] = 0;
   out_2958048041305868181[49] = 0;
   out_2958048041305868181[50] = 0;
   out_2958048041305868181[51] = 0;
   out_2958048041305868181[52] = 0;
   out_2958048041305868181[53] = 0;
   out_2958048041305868181[54] = 0;
   out_2958048041305868181[55] = 0;
   out_2958048041305868181[56] = 1;
   out_2958048041305868181[57] = 0;
   out_2958048041305868181[58] = 0;
   out_2958048041305868181[59] = 0;
   out_2958048041305868181[60] = 0;
   out_2958048041305868181[61] = 0;
   out_2958048041305868181[62] = 0;
   out_2958048041305868181[63] = 0;
   out_2958048041305868181[64] = 0;
   out_2958048041305868181[65] = 0;
}
void h_33(double *state, double *unused, double *out_4679478756135752985) {
   out_4679478756135752985[0] = state[16];
   out_4679478756135752985[1] = state[17];
   out_4679478756135752985[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3317981374076006154) {
   out_3317981374076006154[0] = 0;
   out_3317981374076006154[1] = 0;
   out_3317981374076006154[2] = 0;
   out_3317981374076006154[3] = 0;
   out_3317981374076006154[4] = 0;
   out_3317981374076006154[5] = 0;
   out_3317981374076006154[6] = 0;
   out_3317981374076006154[7] = 0;
   out_3317981374076006154[8] = 0;
   out_3317981374076006154[9] = 0;
   out_3317981374076006154[10] = 0;
   out_3317981374076006154[11] = 0;
   out_3317981374076006154[12] = 0;
   out_3317981374076006154[13] = 0;
   out_3317981374076006154[14] = 0;
   out_3317981374076006154[15] = 0;
   out_3317981374076006154[16] = 1;
   out_3317981374076006154[17] = 0;
   out_3317981374076006154[18] = 0;
   out_3317981374076006154[19] = 0;
   out_3317981374076006154[20] = 0;
   out_3317981374076006154[21] = 0;
   out_3317981374076006154[22] = 0;
   out_3317981374076006154[23] = 0;
   out_3317981374076006154[24] = 0;
   out_3317981374076006154[25] = 0;
   out_3317981374076006154[26] = 0;
   out_3317981374076006154[27] = 0;
   out_3317981374076006154[28] = 0;
   out_3317981374076006154[29] = 0;
   out_3317981374076006154[30] = 0;
   out_3317981374076006154[31] = 0;
   out_3317981374076006154[32] = 0;
   out_3317981374076006154[33] = 0;
   out_3317981374076006154[34] = 0;
   out_3317981374076006154[35] = 0;
   out_3317981374076006154[36] = 0;
   out_3317981374076006154[37] = 0;
   out_3317981374076006154[38] = 0;
   out_3317981374076006154[39] = 1;
   out_3317981374076006154[40] = 0;
   out_3317981374076006154[41] = 0;
   out_3317981374076006154[42] = 0;
   out_3317981374076006154[43] = 0;
   out_3317981374076006154[44] = 0;
   out_3317981374076006154[45] = 0;
   out_3317981374076006154[46] = 0;
   out_3317981374076006154[47] = 0;
   out_3317981374076006154[48] = 0;
   out_3317981374076006154[49] = 0;
   out_3317981374076006154[50] = 0;
   out_3317981374076006154[51] = 0;
   out_3317981374076006154[52] = 0;
   out_3317981374076006154[53] = 0;
   out_3317981374076006154[54] = 0;
   out_3317981374076006154[55] = 0;
   out_3317981374076006154[56] = 0;
   out_3317981374076006154[57] = 0;
   out_3317981374076006154[58] = 0;
   out_3317981374076006154[59] = 0;
   out_3317981374076006154[60] = 0;
   out_3317981374076006154[61] = 0;
   out_3317981374076006154[62] = 1;
   out_3317981374076006154[63] = 0;
   out_3317981374076006154[64] = 0;
   out_3317981374076006154[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3184951436562767646) {
  H(in_vec, out_3184951436562767646);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7323533020603109004) {
  err_fun(nom_x, delta_x, out_7323533020603109004);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_602826505350458911) {
  inv_err_fun(nom_x, true_x, out_602826505350458911);
}
void live_H_mod_fun(double *state, double *out_7234055416017641464) {
  H_mod_fun(state, out_7234055416017641464);
}
void live_f_fun(double *state, double dt, double *out_9030444261325526316) {
  f_fun(state,  dt, out_9030444261325526316);
}
void live_F_fun(double *state, double dt, double *out_7927715977959496876) {
  F_fun(state,  dt, out_7927715977959496876);
}
void live_h_4(double *state, double *unused, double *out_3637205304344111796) {
  h_4(state, unused, out_3637205304344111796);
}
void live_H_4(double *state, double *unused, double *out_3199237687935458826) {
  H_4(state, unused, out_3199237687935458826);
}
void live_h_9(double *state, double *unused, double *out_6939023978727812761) {
  h_9(state, unused, out_6939023978727812761);
}
void live_H_9(double *state, double *unused, double *out_2958048041305868181) {
  H_9(state, unused, out_2958048041305868181);
}
void live_h_10(double *state, double *unused, double *out_5134952168813292064) {
  h_10(state, unused, out_5134952168813292064);
}
void live_H_10(double *state, double *unused, double *out_2518434904635089190) {
  H_10(state, unused, out_2518434904635089190);
}
void live_h_12(double *state, double *unused, double *out_3209066940974086290) {
  h_12(state, unused, out_3209066940974086290);
}
void live_H_12(double *state, double *unused, double *out_1820218720096502969) {
  H_12(state, unused, out_1820218720096502969);
}
void live_h_35(double *state, double *unused, double *out_246045669141529389) {
  h_35(state, unused, out_246045669141529389);
}
void live_H_35(double *state, double *unused, double *out_167424369437148550) {
  H_35(state, unused, out_167424369437148550);
}
void live_h_32(double *state, double *unused, double *out_4754195077562618053) {
  h_32(state, unused, out_4754195077562618053);
}
void live_H_32(double *state, double *unused, double *out_6747440134256967806) {
  H_32(state, unused, out_6747440134256967806);
}
void live_h_13(double *state, double *unused, double *out_4247384275599747322) {
  h_13(state, unused, out_4247384275599747322);
}
void live_H_13(double *state, double *unused, double *out_1067669662797967462) {
  H_13(state, unused, out_1067669662797967462);
}
void live_h_14(double *state, double *unused, double *out_6939023978727812761) {
  h_14(state, unused, out_6939023978727812761);
}
void live_H_14(double *state, double *unused, double *out_2958048041305868181) {
  H_14(state, unused, out_2958048041305868181);
}
void live_h_33(double *state, double *unused, double *out_4679478756135752985) {
  h_33(state, unused, out_4679478756135752985);
}
void live_H_33(double *state, double *unused, double *out_3317981374076006154) {
  H_33(state, unused, out_3317981374076006154);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
